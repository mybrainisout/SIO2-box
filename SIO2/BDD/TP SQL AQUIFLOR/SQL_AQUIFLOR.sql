-- Partie 1 : SQL
--1
CREATE TABLE CLIENTS ( 
	CLT_ID            	INT NOT NULL,
	CLT_NOM           	VARCHAR(50) NOT NULL,
	CLT_PRENOM        	VARCHAR(50) NOT NULL,
	CLT_CODEPOSTAL    	CHAR(5) NOT NULL,
	CLT_VILLE         	VARCHAR(50) NULL,
	CLT_TELEPHONE     	CHAR(14) NULL,
	CLT_PORTABLE      	CHAR(14) NULL,
	CLT_IDGROUPEREMISE	INT DEFAULT NULL NULL 
	)
GO
CREATE TABLE COMMANDES ( 
	CDE_ID      	INT NOT NULL,
	CDE_DATE    	DATE NOT NULL,
	CDE_TOTALTTC	DECIMAL(14,2) NOT NULL,
	CDE_IDCLIENT	INT NOT NULL 
	)
GO
CREATE TABLE GROUPES_REMISES ( 
	GRP_ID        	INT NOT NULL,
	GRP_REFERENCE 	CHAR(1) NOT NULL,
	GRP_LIBELLE   	VARCHAR(50) NOT NULL,
	GRP_TAUXREMISE	DECIMAL(5,2) NOT NULL 
	)
GO

ALTER TABLE CLIENTS	ADD CONSTRAINT PK_CLIENTS PRIMARY KEY (CLT_ID)
GO
ALTER TABLE COMMANDES ADD CONSTRAINT PK_COMMANDES PRIMARY KEY (CDE_ID)
Go
ALTER TABLE GROUPES_REMISES ADD CONSTRAINT PK_GROUPES_REMISES PRIMARY KEY (GRP_ID)
GO
ALTER TABLE GROUPES_REMISES ADD CONSTRAINT CHK_TAUX	CHECK (grp_tauxremise BETWEEN 0 AND 50)
GO
ALTER TABLE CLIENTS ADD CONSTRAINT FK_CLI_GRP FOREIGN KEY(CLT_IDGROUPEREMISE) REFERENCES GROUPES_REMISES(GRP_ID)
GO
ALTER TABLE COMMANDES ADD CONSTRAINT FK_CDE_CLT FOREIGN KEY(CDE_IDCLIENT) REFERENCES CLIENTS(CLT_ID)
GO

--2
SELECT FLR_CODEARTICLE, FLR_NOM, FLR_DESCRIPTION
FROM FLEURS
ORDER BY FLR_CODEARTICLE
GO
--3
SELECT FLR_CODEARTICLE, FLR_PRIXVENTETTC
FROM FLEURS
WHERE UPPER(FLR_CODEARTICLE) LIKE '%JAUNE%'
    OR UPPER(FLR_CODEARTICLE) LIKE '%ORANGE%'
ORDER BY FLR_CODEARTICLE
GO
--4
SELECT AVG(FLR_PRIXVENTETTC)
FROM FLEURS
WHERE FLR_CODEARTICLE LIKE 'RE%'
GO
--5
SELECT COMP_CODEARTICLE, COMP_LIBELLE
FROM COMPOSITIONS
ORDER BY COMP_CODEARTICLE
GO
--6
SELECT COMP_CODEARTICLE, SUM(CONT_QUANTITE)
FROM COMPOSITIONS INNER JOIN CONTENIR ON COMP_ID = CONT_IDCOMPOSITION
GROUP BY COMP_CODEARTICLE
GO
--7
SELECT COMP_CODEARTICLE, COUNT(CONT_IDFLEUR)
FROM COMPOSITIONS INNER JOIN CONTENIR ON COMP_ID = CONT_IDCOMPOSITION
GROUP BY COMP_CODEARTICLE
GO
--8
SELECT COMP_CODEARTICLE, FLR_CODEARTICLE, CONT_QUANTITE
FROM COMPOSITIONS INNER JOIN CONTENIR ON COMP_ID = CONT_IDCOMPOSITION
    INNER JOIN FLEURS ON CONT_IDFLEUR = FLR_ID
ORDER BY COMP_CODEARTICLE, FLR_CODEARTICLE
GO
--9
SELECT DISTINCT COMP_CODEARTICLE, COMP_PRIXVENTETTC
FROM COMPOSITIONS INNER JOIN CONTENIR ON CONT_IDCOMPOSITION = COMP_ID
    INNER JOIN FLEURS ON CONT_IDFLEUR = FLR_ID
WHERE CONT_IDFLEUR IN (
    SELECT FLR_ID FROM FLEURS 
    WHERE UPPER(FLR_CODEARTICLE) LIKE '%JAUNE%'
        OR UPPER(FLR_CODEARTICLE) LIKE '%ORANGE%'
)
ORDER BY COMP_CODEARTICLE
GO
--9
SELECT DISTINCT COMP_CODEARTICLE, COMP_PRIXVENTETTC
FROM COMPOSITIONS INNER JOIN CONTENIR ON CONT_IDCOMPOSITION = COMP_ID
    INNER JOIN FLEURS ON CONT_IDFLEUR = FLR_ID
WHERE UPPER(FLR_CODEARTICLE) LIKE '%JAUNE%'
        OR UPPER(FLR_CODEARTICLE) LIKE '%ORANGE%'
ORDER BY COMP_CODEARTICLE
GO
--10
SELECT DISTINCT COMP_CODEARTICLE, COMP_PRIXVENTETTC
FROM COMPOSITIONS INNER JOIN CONTENIR ON CONT_IDCOMPOSITION = COMP_ID
    INNER JOIN FLEURS ON CONT_IDFLEUR = FLR_ID
WHERE CONT_IDFLEUR NOT IN (
    SELECT FLR_ID FROM FLEURS 
    WHERE UPPER(FLR_CODEARTICLE) LIKE '%ROSE%'
        OR UPPER(FLR_CODEARTICLE) LIKE '%ROUGE%'
)
ORDER BY COMP_CODEARTICLE
GO
--10
SELECT DISTINCT COMP_CODEARTICLE, COMP_PRIXVENTETTC
FROM COMPOSITIONS INNER JOIN CONTENIR ON CONT_IDCOMPOSITION = COMP_ID
    INNER JOIN FLEURS ON CONT_IDFLEUR = FLR_ID
WHERE UPPER(FLR_CODEARTICLE) NOT LIKE '%ROSE%'
        AND UPPER(FLR_CODEARTICLE) NOT LIKE '%ROUGE%'
ORDER BY COMP_CODEARTICLE
GO
--11
SELECT COMP_CODEARTICLE, COMP_PRIXVENTETTC, SUM(CONT_QUANTITE * FLR_PRIXVENTETTC) AS PrixVenteUnite, (SUM(CONT_QUANTITE * FLR_PRIXVENTETTC)) - COMP_PRIXVENTETTC as Gain
FROM COMPOSITIONS INNER JOIN CONTENIR ON COMP_ID = CONT_IDCOMPOSITION
    INNER JOIN FLEURS ON CONT_IDFLEUR = FLR_ID
GROUP BY COMP_CODEARTICLE, COMP_PRIXVENTETTC
ORDER BY COMP_CODEARTICLE
GO
--12
UPDATE COMPOSITIONS
SET COMP_PRIXVENTETTC = NVL((SELECT SUM(CONT_QUANTITE * (FLR_PRIXVENTETTC * .90)) AS PrixVenteUnite
                            FROM CONTENIR INNER JOIN FLEURS ON CONT_IDFLEUR = FLR_ID
                                WHERE CONT_IDCOMPOSITION = COMP_ID), 0)
GO
--13
SELECT clt_nom, clt_prenom
FROM CLIENTS INNER JOIN COMMANDES ON CLT_ID = CDE_IDCLIENT
    INNER JOIN CONCERNER ON CDE_ID = CONC_IDCOMMANDE
WHERE CLT_IDGROUPEREMISE IN (2, 3)
AND clt_id NOT IN (
    SELECT clt_id
    FROM CLIENTS INNER JOIN COMMANDES ON clt_id = cde_idclient
        INNER JOIN CONCERNER ON CDE_ID = CONC_IDCOMMANDE
        INNER JOIN COMPOSITIONS ON CONC_IDCOMPOSITION = COMP_ID
    )
GO
--14
SELECT clt_nom, clt_prenom, TO_CHAR(CDE_DATE, 'MM-YYYY') Mois, SUM(CDE_TOTALTTC) TotalCommandes, COUNT(CDE_ID) nbCommandes
FROM CLIENTS INNER JOIN COMMANDES ON clt_id = cde_idclient
GROUP BY clt_nom, clt_prenom, TO_CHAR(CDE_DATE, 'MM-YYYY')
ORDER BY clt_nom, Mois DESC
GO
